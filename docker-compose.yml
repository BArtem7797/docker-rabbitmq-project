services:
  rabbitmq:
    image: rabbitmq:3.12.0-management
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=project
      - RABBITMQ_DEFAULT_PASS=12345
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - erlang

  erlang:
    image: erlang:25.3.2.2
    command: ["sleep", "infinity"]

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=project
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=transactions_db
    ports:
      - "5433:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U project -d transactions_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  producer:
    image: artbart825/rabbitmq-course-producer:1.0
    command: python producer/app.py
    ports:
      - "5000:5000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  consumer:
    image: artbart825/rabbitmq-course-consumer:1.0
    command: python consumer/app.py
    ports:
      - "5001:5001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data: